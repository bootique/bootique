name: 'build test deploy 2.x'

on:
  push:
    branches: [ 2.x ]

jobs:
  build:
    runs-on: ubuntu-20.04
    name: JDK ${{ matrix.java }}
    strategy:
      matrix:
        java: [ 8, 11, 17 ]

    steps:
      - name: Checkout...
        uses: actions/checkout@v2

      - name: Set up JDK...
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}

      - name: Retrieve mvn repo cache...
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-build-v1
          restore-keys: ${{ runner.os }}-maven

      - name: Build and test...
        run: mvn clean verify

  deploy:
    needs: build
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout...
        uses: actions/checkout@v2

      # this action exports env.POM_VERSION variable
      - name: Export Maven coordinates...
        uses: bootique-tools/export-maven-coordinates-action@v1

      - name: Set up JDK...
        uses: actions/setup-java@v1
        # skip this for the release versions
        if: contains(env.POM_VERSION, '-SNAPSHOT')
        with:
          java-version: 1.8

      - name: Retrieve mvn repo cache...
        uses: actions/cache@v2
        # skip this for the release versions
        if: contains(env.POM_VERSION, '-SNAPSHOT')
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-build-v1
          restore-keys: ${{ runner.os }}-maven

      - name: Deploy...
        run: mvn clean source:jar-no-fork javadoc:jar deploy -DskipTests --settings .github/workflows/maven_settings.xml
        # skip this for the release versions
        if: contains(env.POM_VERSION, '-SNAPSHOT')
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
